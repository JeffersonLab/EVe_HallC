   ( "BB.mwdc.u1.nhits", &B_mwdc_u1_nhits);
   ( "BB.mwdc.u1p.nhits", &B_mwdc_u1p_nhits);
   ( "BB.mwdc.u2.nhits", &B_mwdc_v2p_nhits);
   ( "BB.mwdc.u2p.nhits", &B_mwdc_v2_nhits);

   ( "BB.mwdc.v1.nhits", &B_mwdc_v1_nhits);
   ( "BB.mwdc.v1p.nhits", &B_mwdc_v1p_nhits);
   ( "BB.mwdc.v2.nhits", &B_mwdc_u2p_nhits);
   ( "BB.mwdc.v2p.nhits", &B_mwdc_u2_nhits);

   ( "BB.mwdc.x1.nhits", &B_mwdc_x1_nhits);
   ( "BB.mwdc.x1p.nhits", &B_mwdc_x1p_nhits);
   ( "BB.mwdc.x2.nhits", &B_mwdc_x2p_nhits);
   ( "BB.mwdc.x2p.nhits", &B_mwdc_x2_nhits);


  // // U-wire plane
   ( "BB.mwdc.u1.hit.wire", &B_mwdc_u1_hit_wire);
   ( "BB.mwdc.u1p.hit.wire", &B_mwdc_u1p_hit_wire);
   ( "BB.mwdc.u2.hit.wire", &B_mwdc_v2p_hit_wire);
   ( "BB.mwdc.u2p.hit.wire", &B_mwdc_v2_hit_wire);

   ( "BB.mwdc.u1.hit.time", &B_mwdc_u1_hit_time);
   ( "BB.mwdc.u1p.hit.time", &B_mwdc_u1p_hit_time);
   ( "BB.mwdc.u2.hit.time", &B_mwdc_v2p_hit_time);
   ( "BB.mwdc.u2p.hit.time", &B_mwdc_v2_hit_time);

   ( "BB.mwdc.u.nroads", &B_mwdc_u_nroads); 
   ( "BB.mwdc.u.rd.zL", &B_mwdc_u_rd_zL);
   ( "BB.mwdc.u.rd.zU", &B_mwdc_u_rd_zU);
   ( "BB.mwdc.u.rd.xLL", &B_mwdc_u_rd_xLL);
   ( "BB.mwdc.u.rd.xLR", &B_mwdc_u_rd_xLR);
   ( "BB.mwdc.u.rd.xUL", &B_mwdc_u_rd_xUL);
   ( "BB.mwdc.u.rd.xUR", &B_mwdc_u_rd_xUR);
  
   ( "BB.mwdc.u.rd.good", &B_mwdc_u_rd_good);
   ( "BB.mwdc.u.rd.pos", &B_mwdc_u_rd_pos);
   "BB.mwdc.u.rd.slope", &B_mwdc_u_rd_slope);
   "BB.mwdc.u.rd.chi2", &B_mwdc_u_rd_chi2);
 
  // // V-wire plane
   "BB.mwdc.v1.hit.wire", &B_mwdc_v1_hit_wire);
   "BB.mwdc.v1p.hit.wire", &B_mwdc_v1p_hit_wire);
   "BB.mwdc.v2.hit.wire", &B_mwdc_u2p_hit_wire);
   "BB.mwdc.v2p.hit.wire", &B_mwdc_u2_hit_wire);

   "BB.mwdc.v1.hit.time", &B_mwdc_v1_hit_time);
   "BB.mwdc.v1p.hit.time", &B_mwdc_v1p_hit_time);
   "BB.mwdc.v2.hit.time", &B_mwdc_u2p_hit_time);
   "BB.mwdc.v2p.hit.time", &B_mwdc_u2_hit_time);

   "BB.mwdc.v.nroads", &B_mwdc_v_nroads); 
   "BB.mwdc.v.rd.zL", &B_mwdc_v_rd_zL);
   "BB.mwdc.v.rd.zU", &B_mwdc_v_rd_zU);
   "BB.mwdc.v.rd.xLL", &B_mwdc_v_rd_xLL);
   "BB.mwdc.v.rd.xLR", &B_mwdc_v_rd_xLR);
   "BB.mwdc.v.rd.xUL", &B_mwdc_v_rd_xUL);
   "BB.mwdc.v.rd.xUR", &B_mwdc_v_rd_xUR);
  
   "BB.mwdc.v.rd.good", &B_mwdc_v_rd_good);
   "BB.mwdc.v.rd.pos", &B_mwdc_v_rd_pos);
   "BB.mwdc.v.rd.slope", &B_mwdc_v_rd_slope);
   "BB.mwdc.v.rd.chi2", &B_mwdc_v_rd_chi2);

  // // X-wire plane
   "BB.mwdc.x1.hit.wire", &B_mwdc_x1_hit_wire);
   "BB.mwdc.x1p.hit.wire", &B_mwdc_x1p_hit_wire);
   "BB.mwdc.x2.hit.wire", &B_mwdc_x2p_hit_wire);
   "BB.mwdc.x2p.hit.wire", &B_mwdc_x2_hit_wire);

   "BB.mwdc.x1.hit.time", &B_mwdc_x1_hit_time);
   "BB.mwdc.x1p.hit.time", &B_mwdc_x1p_hit_time);
   "BB.mwdc.x2.hit.time", &B_mwdc_x2p_hit_time);
   "BB.mwdc.x2p.hit.time", &B_mwdc_x2_hit_time);

   "BB.mwdc.x.nroads", &B_mwdc_x_nroads); 
   "BB.mwdc.x.rd.zL", &B_mwdc_x_rd_zL);
   "BB.mwdc.x.rd.zU", &B_mwdc_x_rd_zU);
   "BB.mwdc.x.rd.xLL", &B_mwdc_x_rd_xLL);
   "BB.mwdc.x.rd.xLR", &B_mwdc_x_rd_xLR);
   "BB.mwdc.x.rd.xUL", &B_mwdc_x_rd_xUL);
   "BB.mwdc.x.rd.xUR", &B_mwdc_x_rd_xUR);
  
   "BB.mwdc.x.rd.good", &B_mwdc_x_rd_good);
   "BB.mwdc.x.rd.pos", &B_mwdc_x_rd_pos);
   "BB.mwdc.x.rd.slope", &B_mwdc_x_rd_slope);
   "BB.mwdc.x.rd.chi2", &B_mwdc_x_rd_chi2);

   "BB.mwdc.u.ngood", &B_mwdc_u_ngood);
   "BB.mwdc.v.ngood", &B_mwdc_v_ngood);
   "BB.mwdc.x.ngood", &B_mwdc_x_ngood);


   "BB.tr.n", &B_tr_n);
   "BB.tr.x", &B_tr_x);
   "BB.tr.y", &B_tr_y);
   "BB.tr.ph", &B_tr_ph);
   "BB.tr.th", &B_tr_th);
  
   "BB.tp.e.nhit", &B_tp_e_nhit);
   "BB.tp.e.LT", &B_tp_e_LT);
   "BB.tp.e.RT", &B_tp_e_RT);
   "BB.tp.e.hit_ypos", &B_tp_e_hit_ypos);
   "BB.tp.e.hit_bar", &B_tp_e_hit_bar);
  
   "BB.tp.de.nhit", &B_tp_de_nhit);
   "BB.tp.de.LT", &B_tp_de_LT);
   "BB.tp.de.RT", &B_tp_de_RT);
   "BB.tp.de.hit_ypos", &B_tp_de_hit_ypos);
   "BB.tp.de.hit_bar", &B_tp_de_hit_bar);
  

#if FULL_TRACK > 0
   "BB.tr.px", &B_tr_px);
   "BB.tr.py", &B_tr_py);
   "BB.tr.pz", &B_tr_pz);
   "BB.tr.p", &B_tr_p);
#endif
